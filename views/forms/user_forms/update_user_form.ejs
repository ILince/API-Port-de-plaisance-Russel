<div>
  <h2>Update User</h2>
  <form id="updateUserForm">
    <!-- Dropdown to select the user to update -->
    <label for="updateUserId">Select the user to update:</label>
    <select id="updateUserId" name="updateUserId" required>
      <option value="" disabled selected>Select a user</option>
    </select>
    <br /><br />

    <!-- Other form fields -->
    <label for="updateName">Name:</label>
    <input type="text" id="updateName" name="updateName" required /><br /><br />

    <label for="updateEmail">Email:</label>
    <input
      type="email"
      id="updateEmail"
      name="updateEmail"
      required
    /><br /><br />

    <label for="updatePassword">Password:</label>
    <input
      type="password"
      id="updatePassword"
      name="updatePassword"
    /><br /><br />

    <button type="submit">Update User</button>
  </form>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Fetch and populate the user dropdown
    async function populateUserSelect() {
      try {
        const response = await fetch("/users");

        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const users = await response.json();
        const selectElement = document.getElementById("updateUserId");
        selectElement.innerHTML = "<option value='' disabled selected>Select a user</option>";

        users.forEach(user => {
          const option = document.createElement("option");
          option.value = user._id;
          option.textContent = `${user.name} (${user.email})`;
          selectElement.appendChild(option);
        });
      } catch (error) {
        console.error("Error retrieving users:", error.message);
        alert("Error retrieving users");
      }
    }

    // Fetch and populate the form with the selected user's data
    async function populateUserForm(userId) {
      try {
        const response = await fetch(`/users/${userId}`);

        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const user = await response.json();
        document.getElementById("updateName").value = user.name;
        document.getElementById("updateEmail").value = user.email;
        document.getElementById("updatePassword").value = ""; // Clear password field
      } catch (error) {
        console.error("Error retrieving user information:", error.message);
        alert("Error retrieving user information");
      }
    }

    // Populate the dropdown and set up event listeners
    populateUserSelect();

    document.getElementById("updateUserId").addEventListener("change", function (event) {
      const userId = event.target.value;
      if (userId) {
        populateUserForm(userId);
      }
    });

    // Handle form submission
    document.getElementById("updateUserForm").addEventListener("submit", async function (event) {
      event.preventDefault();

      const userId = document.getElementById("updateUserId").value;
      const name = document.getElementById("updateName").value;
      const email = document.getElementById("updateEmail").value;
      const password = document.getElementById("updatePassword").value;

      if (!userId) {
        alert("Please select a user");
        return;
      }

      const updatedData = { name, email };
      if (password) {
        updatedData.password = password;
      }

      try {
        const response = await fetch(`/users/${userId}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(updatedData),
        });

        if (response.ok) {
          const updatedUser = await response.json();
          console.log("User updated:", updatedUser);
          alert("User updated successfully!");
          window.location.reload(); // Reload to reflect changes
        } else {
          const error = await response.json();
          throw new Error(error.message || "Error updating user");
        }
      } catch (error) {
        console.error("Error:", error);
        alert("Error updating user: " + error.message);
      }
    });
  });
</script>
